function spawnCustomEntity(config)
    local InsertService = game:GetService("InsertService")
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local lp = Players.LocalPlayer
    local char = lp.Character or lp.CharacterAdded:Wait()

    -- Load custom model
    local modelAsset = InsertService:LoadAsset(config.modelId or 0)
    local entity = modelAsset:FindFirstChildOfClass("Model")
    if not entity then warn("Model not found in asset!") return end

    entity.Name = config.name or "CustomEntity"
    entity.PrimaryPart = entity:FindFirstChild("HumanoidRootPart") or entity:FindFirstChildWhichIsA("BasePart")
    if not entity.PrimaryPart then warn("No PrimaryPart found!") return end
    entity.Parent = workspace

    -- Initial position: start near the first room
    local rooms = workspace:FindFirstChild("CurrentRooms")
    if not rooms then warn("Rooms not found") return end

    local startRoom = rooms:GetChildren()[1]
    local door = startRoom:FindFirstChild("Door")
    if door then
        entity:PivotTo(door.CFrame + Vector3.new(0, 5, 0))
    end

    -- Play sound
    if config.soundId then
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://"..config.soundId
        sound.Volume = config.soundVolume or 1
        sound.Looped = true
        sound.Parent = entity.PrimaryPart
        sound:Play()
    end

    -- Light flicker
    local function flickerLights(room)
        if not config.flickerLights then return end
        local lights = room:FindFirstChild("Lights")
        if lights then
            for _, light in ipairs(lights:GetDescendants()) do
                if light:IsA("Light") then
                    light.Enabled = false
                end
            end
            wait(0.1)
            for _, light in ipairs(lights:GetDescendants()) do
                if light:IsA("Light") then
                    light.Enabled = true
                end
            end
        end
    end

    -- Kill logic
    if config.canKill then
        entity.PrimaryPart.Touched:Connect(function(hit)
            if hit:IsDescendantOf(char) then
                char:BreakJoints()
                if config.jumpscareImage or config.jumpscareSound then
                    local gui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
                    gui.IgnoreGuiInset = true
                    local img = Instance.new("ImageLabel", gui)
                    img.Image = "rbxassetid://"..(config.jumpscareImage or "")
                    img.Size = UDim2.new(1, 0, 1, 0)
                    img.BackgroundTransparency = 1

                    if config.jumpscareSound then
                        local jsound = Instance.new("Sound", gui)
                        jsound.SoundId = "rbxassetid://"..config.jumpscareSound
                        jsound.Volume = 1
                        jsound:Play()
                    end

                    wait(config.jumpscareDuration or 2)
                    gui:Destroy()
                end
            end
        end)
    end

    -- Movement logic
    local function move()
        for _ = 1, (config.cycles or 1) do
            for _, room in ipairs(rooms:GetChildren()) do
                local target = room:FindFirstChild("RoomExit") or room:FindFirstChild("Door")
                if target then
                    flickerLights(room)
                    local targetPos = target.Position
                    while (entity.PrimaryPart.Position - targetPos).Magnitude > 5 do
                        local dir = (targetPos - entity.PrimaryPart.Position).Unit
                        entity:SetPrimaryPartCFrame(entity.PrimaryPart.CFrame + dir * (config.speed or 1.5))
                        RunService.Heartbeat:Wait()
                    end
                    wait(config.waitPerRoom or 0.05)
                end
            end
            wait(config.waitBetweenCycles or 1)
        end
    end

    coroutine.wrap(move)()
end
